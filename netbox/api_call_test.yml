---
# Run with ansible-playbook -i netbox_inventory.yml deploy_fabric.yaml -u ansible -k
- hosts: "all"
  connection: network_cli
  become: no
  gather_facts: no
  vars:
    netbox_url: http://netbox.gator.local
    netbox_token: 6517d7e3a342463e11f95a6d9378c161aa159dc8
    working_folder: results
  tasks:
    - name: Get all devices from NetBox
      uri:
        url: "{{ netbox_url }}/api/dcim/devices/"
        method: GET
        return_content: yes
        headers:
          accept: "application/json"
          Authorization: "Token {{ netbox_token }}"
      register: nb_all_devices
    - name: Get device from NetBox
      uri:
        url: "{{ netbox_url }}/api/dcim/devices/?name={{ inventory_hostname }}"
        method: GET
        return_content: yes
        headers:
          accept: "application/json"
          Authorization: "Token {{ netbox_token }}"
      register: nb_device
    - name: Get device interfaces from NetBox
      uri:
        url: "{{ netbox_url }}/api/dcim/interfaces/?device={{ inventory_hostname }}"
        method: GET
        return_content: yes
        headers:
          accept: "application/json"
          Authorization: "Token {{ netbox_token }}"
      register: nb_interfaces
    - name: Get device IP addresses from NetBox
      uri:
        url: "{{ netbox_url }}/api/ipam/ip-addresses/?device={{ inventory_hostname }}"
        method: GET
        return_content: yes
        headers:
          accept: "application/json"
          Authorization: "Token {{ netbox_token }}"
      register: nb_ips
    - name: Create temporary folder for {{ inventory_hostname }}
      file:
        dest: "{{ working_folder }}/{{ inventory_hostname }}"
        state: directory
    - name: Create configuration file for {{ inventory_hostname }}
      template:
          src: "templates/{{ platforms[0] }}.j2"
          dest: "{{ working_folder }}/{{ inventory_hostname }}/{{ inventory_hostname }}.conf"
